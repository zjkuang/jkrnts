////////////////////////////////////////
Open Developer Menu on iOS Simulator
⌘D (Command-D). If not working, try ⌘^Z (Command-Control-Z).

////////////////////////////////////////
Change Metro port
e.g. By default Metro starts at port 8081. But if you want to start a new metro serving another R/N app at the same time, you need to start them on a different port, say 8082.
(0) Check if a port is free
// https://stackoverflow.com/a/4421674/7455975
`sudo lsof -nP -i4TCP:$PORT | grep LISTEN`
  -- Remember to replace $PORT with a real one like 8082
(1) First start Metro and the app on normal port (8081)
`yarn start`
`yarn ios`
(2) In a new Terminal, start a new Metro on a new port, e.g. 8082
`yarn start --port 8082`
(3) Config the app's bundle to the new port
(3.1) ⌘D (Command-D) (or Command-Control-Z if Command-D won't work.) to open Developer Menu.
(3.2) Choose "Configure Bundler" from Developer Menu.
(3.3) Input the local IP of your wifi network, and the port, e.g. 8082
(*) After the above steps, even if you kill and restart the app, the bundle configuration would persist.

////////////////////////////////////////
Add items to Develop Menu

// https://stackoverflow.com/a/68014411/7455975
import { DevSettings } from 'react-native';
  useEffect(() => {
    DevSettings.addMenuItem('Toggle Storybook', () => {
      // Perform your logic here
    });
  }, []);

https://yarnpkg.com/package/react-native-dev-menu

////////////////////////////////////////
`yarn ios` to specific Simulator

// https://stackoverflow.com/a/37329896/7455975
`npx react-native run-ios --simulator="iPhone 13"`
(*) To list all available iOS devices:
  `xcrun simctl list devices`
(*) You might want to add a most frequently used yarn command to package.json "scripts":
{
  ...
  "scripts": {
    ...
    "ios": "react-native run-ios",
    "sim-iphone-13": "react-native run-ios --simulator \"iPhone 13\"",
    ...
  },
  ...
}
And then you can `yarn sim-iphone-13`
